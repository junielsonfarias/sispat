# ===========================================
# SISPAT 2.0 - DOCKER COMPOSE PARA PRODUÇÃO
# ===========================================

version: '3.8'

services:
  # ===========================================
  # Banco de Dados PostgreSQL
  # ===========================================
  postgres:
    image: postgres:15-alpine
    container_name: sispat-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: sispat_prod
      POSTGRES_USER: sispat_user
      POSTGRES_PASSWORD: ${DB_PASSWORD:-CHANGE_THIS_PASSWORD}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backup:/backup
    ports:
      - "5432:5432"
    networks:
      - sispat-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U sispat_user -d sispat_prod"]
      interval: 10s
      timeout: 5s
      retries: 5

  # ===========================================
  # Redis (Cache e Sessões)
  # ===========================================
  redis:
    image: redis:7-alpine
    container_name: sispat-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-}
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - sispat-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # ===========================================
  # Aplicação SISPAT
  # ===========================================
  sispat:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: sispat-app
    restart: unless-stopped
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://sispat_user:${DB_PASSWORD:-CHANGE_THIS_PASSWORD}@postgres:5432/sispat_prod
      REDIS_URL: redis://redis:6379
      JWT_SECRET: ${JWT_SECRET:-CHANGE_THIS_TO_A_256_BIT_SECRET_KEY}
      FRONTEND_URL: ${FRONTEND_URL:-https://sispat.seudominio.com}
      PORT: 3000
    volumes:
      - uploads_data:/app/backend/uploads
      - logs_data:/app/backend/logs
      - backups_data:/app/backend/backups
    ports:
      - "3000:3000"
    networks:
      - sispat-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # ===========================================
  # Nginx (Proxy Reverso)
  # ===========================================
  nginx:
    image: nginx:alpine
    container_name: sispat-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - uploads_data:/var/www/uploads:ro
    networks:
      - sispat-network
    depends_on:
      - sispat
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

# ===========================================
# Volumes Persistentes
# ===========================================
volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  uploads_data:
    driver: local
  logs_data:
    driver: local
  backups_data:
    driver: local

# ===========================================
# Rede
# ===========================================
networks:
  sispat-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
