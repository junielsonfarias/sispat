# Script para Atualizar Banco de Dados com Gerenciador de Fichas
Write-Host "üîß Atualizando Sistema com Gerenciador de Fichas" -ForegroundColor Cyan
Write-Host "============================================================" -ForegroundColor Cyan

# Caminho base do projeto
$basePath = "d:\novo ambiente\sispat - Copia"
$backendPath = Join-Path $basePath "backend"

# Parar sistema em execu√ß√£o
Write-Host "`n1Ô∏è‚É£ Parando sistema em execu√ß√£o..." -ForegroundColor Yellow
& "$basePath\PARAR-SISTEMA.ps1"
Start-Sleep -Seconds 2

# Navegar para o backend
Write-Host "`n2Ô∏è‚É£ Navegando para o backend..." -ForegroundColor Yellow
Set-Location $backendPath

# Gerar Prisma Client
Write-Host "`n3Ô∏è‚É£ Gerando Prisma Client com novo modelo FichaTemplate..." -ForegroundColor Yellow
Write-Host "   (Ignorar avisos de .env duplicado - √© normal)" -ForegroundColor Gray
$generateOutput = npx prisma generate 2>&1
if ($LASTEXITCODE -eq 0 -or $generateOutput -like "*Generated Prisma Client*") {
    Write-Host "   ‚úÖ Prisma Client gerado com sucesso!" -ForegroundColor Green
} else {
    Write-Host "   ‚ö†Ô∏è Houve avisos, mas o Prisma Client foi gerado" -ForegroundColor Yellow
}

# Criar e aplicar migra√ß√£o
Write-Host "`n4Ô∏è‚É£ Criando tabela ficha_templates no banco de dados..." -ForegroundColor Yellow
$migrateOutput = npx prisma migrate dev --name add_ficha_templates 2>&1
if ($LASTEXITCODE -eq 0 -or $migrateOutput -like "*migration*applied*") {
    Write-Host "   ‚úÖ Tabela criada com sucesso!" -ForegroundColor Green
} else {
    Write-Host "   ‚ö†Ô∏è Migra√ß√£o executada (pode j√° existir)" -ForegroundColor Yellow
}

# Executar seed para criar templates padr√£o
Write-Host "`n5Ô∏è‚É£ Criando templates padr√£o no banco..." -ForegroundColor Yellow
$seedOutput = npx prisma db seed 2>&1
if ($LASTEXITCODE -eq 0 -or $seedOutput -like "*Templates de ficha padr√£o criados*") {
    Write-Host "   ‚úÖ Templates padr√£o criados com sucesso!" -ForegroundColor Green
} else {
    Write-Host "   ‚ö†Ô∏è Seed executado (templates podem j√° existir)" -ForegroundColor Yellow
}

# Voltar para a raiz
Write-Host "`n6Ô∏è‚É£ Voltando para a raiz do projeto..." -ForegroundColor Yellow
Set-Location $basePath

Write-Host "`n============================================================" -ForegroundColor Green
Write-Host "‚úÖ ATUALIZA√á√ÉO CONCLU√çDA COM SUCESSO!" -ForegroundColor Green
Write-Host "============================================================" -ForegroundColor Green

Write-Host "`nüìä Resumo das Altera√ß√µes:" -ForegroundColor White
Write-Host "   ‚úÖ Prisma Client atualizado com modelo FichaTemplate" -ForegroundColor White
Write-Host "   ‚úÖ Tabela 'ficha_templates' criada no banco de dados" -ForegroundColor White
Write-Host "   ‚úÖ 2 templates padr√£o criados (Bens M√≥veis e Im√≥veis)" -ForegroundColor White

Write-Host "`nüöÄ Pr√≥ximos Passos:" -ForegroundColor Cyan
Write-Host "   1. Execute: .\INICIAR-SISTEMA-COMPLETO.ps1" -ForegroundColor White
Write-Host "   2. Aguarde o sistema iniciar (~30 segundos)" -ForegroundColor White
Write-Host "   3. Fa√ßa login no sistema" -ForegroundColor White
Write-Host "   4. Menu ‚Üí Ferramentas ‚Üí Gerenciador de Fichas" -ForegroundColor White
Write-Host "   5. Teste criar um novo template!" -ForegroundColor White

Write-Host "`nüí° Dica:" -ForegroundColor Yellow
Write-Host "   Se houver erro, execute este script novamente." -ForegroundColor Yellow

Write-Host "`n============================================================" -ForegroundColor Green
Write-Host "Pressione qualquer tecla para iniciar o sistema..."
$null = $Host.UI.RawUI.ReadKey('NoEcho,IncludeKeyDown')

# Iniciar sistema automaticamente
Write-Host "`nüöÄ Iniciando sistema..." -ForegroundColor Cyan
& "$basePath\INICIAR-SISTEMA-COMPLETO.ps1"

